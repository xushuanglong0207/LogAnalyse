{"version":3,"sources":["../../../../src/client/components/globals/intercept-console-error.ts"],"sourcesContent":["import { isNextRouterError } from '../is-next-router-error'\nimport { handleClientError } from '../react-dev-overlay/internal/helpers/use-error-handler'\n\nconst originConsoleError = window.console.error\n\n// Patch console.error to collect information about hydration errors\nexport function patchConsoleError() {\n  // Ensure it's only patched once\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  window.console.error = (...args: any[]) => {\n    // See https://github.com/facebook/react/blob/d50323eb845c5fde0d720cae888bf35dedd05506/packages/react-reconciler/src/ReactFiberErrorLogger.js#L78\n    const error = process.env.NODE_ENV !== 'production' ? args[1] : args[0]\n\n    if (!isNextRouterError(error)) {\n      if (process.env.NODE_ENV !== 'production') {\n        handleClientError(error, args)\n      }\n\n      originConsoleError.apply(window.console, args)\n    }\n  }\n}\n"],"names":["isNextRouterError","handleClientError","originConsoleError","window","console","error","patchConsoleError","args","process","env","NODE_ENV","apply"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,0BAAyB;AAC3D,SAASC,iBAAiB,QAAQ,0DAAyD;AAE3F,MAAMC,qBAAqBC,OAAOC,OAAO,CAACC,KAAK;AAE/C,oEAAoE;AACpE,OAAO,SAASC;IACd,gCAAgC;IAChC,IAAI,OAAOH,WAAW,aAAa;QACjC;IACF;IAEAA,OAAOC,OAAO,CAACC,KAAK,GAAG;yCAAIE;YAAAA;;QACzB,iJAAiJ;QACjJ,MAAMF,QAAQG,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAeH,IAAI,CAAC,EAAE,GAAGA,IAAI,CAAC,EAAE;QAEvE,IAAI,CAACP,kBAAkBK,QAAQ;YAC7B,IAAIG,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;gBACzCT,kBAAkBI,OAAOE;YAC3B;YAEAL,mBAAmBS,KAAK,CAACR,OAAOC,OAAO,EAAEG;QAC3C;IACF;AACF"}