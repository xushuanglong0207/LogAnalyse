{"version":3,"sources":["../../../src/client/components/client-page.tsx"],"sourcesContent":["'use client'\n\nimport type { ParsedUrlQuery } from 'querystring'\nimport { InvariantError } from '../../shared/lib/invariant-error'\n\nimport type { Params } from '../../server/request/params'\n\n/**\n * When the Page is a client component we send the params and searchParams to this client wrapper\n * where they are turned into dynamically tracked values before being passed to the actual Page component.\n *\n * additionally we may send promises representing the params and searchParams. We don't ever use these passed\n * values but it can be necessary for the sender to send a Promise that doesn't resolve in certain situations.\n * It is up to the caller to decide if the promises are needed.\n */\nexport function ClientPageRoot({\n  Component,\n  searchParams,\n  params,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  promises,\n}: {\n  Component: React.ComponentType<any>\n  searchParams: ParsedUrlQuery\n  params: Params\n  promises?: Array<Promise<any>>\n}) {\n  if (typeof window === 'undefined') {\n    const { workAsyncStorage } =\n      require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n\n    let clientSearchParams: Promise<ParsedUrlQuery>\n    let clientParams: Promise<Params>\n    // We are going to instrument the searchParams prop with tracking for the\n    // appropriate context. We wrap differently in prerendering vs rendering\n    const store = workAsyncStorage.getStore()\n    if (!store) {\n      throw new InvariantError(\n        'Expected workStore to exist when handling searchParams in a client Page.'\n      )\n    }\n\n    if (store.isStaticGeneration) {\n      // We are in a prerender context\n      const { createPrerenderSearchParamsFromClient } =\n        require('../../server/request/search-params') as typeof import('../../server/request/search-params')\n      clientSearchParams = createPrerenderSearchParamsFromClient(store)\n\n      const { createPrerenderParamsFromClient } =\n        require('../../server/request/params') as typeof import('../../server/request/params')\n\n      clientParams = createPrerenderParamsFromClient(params, store)\n    } else {\n      const { createRenderSearchParamsFromClient } =\n        require('../../server/request/search-params') as typeof import('../../server/request/search-params')\n      clientSearchParams = createRenderSearchParamsFromClient(\n        searchParams,\n        store\n      )\n      const { createRenderParamsFromClient } =\n        require('../../server/request/params') as typeof import('../../server/request/params')\n      clientParams = createRenderParamsFromClient(params, store)\n    }\n\n    return <Component params={clientParams} searchParams={clientSearchParams} />\n  } else {\n    const { createRenderSearchParamsFromClient } =\n      require('../../server/request/search-params.browser') as typeof import('../../server/request/search-params.browser')\n    const clientSearchParams = createRenderSearchParamsFromClient(searchParams)\n    const { createRenderParamsFromClient } =\n      require('../../server/request/params.browser') as typeof import('../../server/request/params.browser')\n    const clientParams = createRenderParamsFromClient(params)\n\n    return <Component params={clientParams} searchParams={clientSearchParams} />\n  }\n}\n"],"names":["InvariantError","ClientPageRoot","Component","searchParams","params","promises","window","workAsyncStorage","require","clientSearchParams","clientParams","store","getStore","isStaticGeneration","createPrerenderSearchParamsFromClient","createPrerenderParamsFromClient","createRenderSearchParamsFromClient","createRenderParamsFromClient"],"mappings":"AAAA;;AAGA,SAASA,cAAc,QAAQ,mCAAkC;AAIjE;;;;;;;CAOC,GACD,OAAO,SAASC,eAAe,KAW9B;IAX8B,IAAA,EAC7BC,SAAS,EACTC,YAAY,EACZC,MAAM,EACN,6DAA6D;IAC7DC,QAAQ,EAMT,GAX8B;IAY7B,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAM,EAAEC,gBAAgB,EAAE,GACxBC,QAAQ;QAEV,IAAIC;QACJ,IAAIC;QACJ,yEAAyE;QACzE,wEAAwE;QACxE,MAAMC,QAAQJ,iBAAiBK,QAAQ;QACvC,IAAI,CAACD,OAAO;YACV,MAAM,IAAIX,eACR;QAEJ;QAEA,IAAIW,MAAME,kBAAkB,EAAE;YAC5B,gCAAgC;YAChC,MAAM,EAAEC,qCAAqC,EAAE,GAC7CN,QAAQ;YACVC,qBAAqBK,sCAAsCH;YAE3D,MAAM,EAAEI,+BAA+B,EAAE,GACvCP,QAAQ;YAEVE,eAAeK,gCAAgCX,QAAQO;QACzD,OAAO;YACL,MAAM,EAAEK,kCAAkC,EAAE,GAC1CR,QAAQ;YACVC,qBAAqBO,mCACnBb,cACAQ;YAEF,MAAM,EAAEM,4BAA4B,EAAE,GACpCT,QAAQ;YACVE,eAAeO,6BAA6Bb,QAAQO;QACtD;QAEA,qBAAO,KAACT;YAAUE,QAAQM;YAAcP,cAAcM;;IACxD,OAAO;QACL,MAAM,EAAEO,kCAAkC,EAAE,GAC1CR,QAAQ;QACV,MAAMC,qBAAqBO,mCAAmCb;QAC9D,MAAM,EAAEc,4BAA4B,EAAE,GACpCT,QAAQ;QACV,MAAME,eAAeO,6BAA6Bb;QAElD,qBAAO,KAACF;YAAUE,QAAQM;YAAcP,cAAcM;;IACxD;AACF"}